---
- name: Install prerequisite database
  xbps:
    pkg:
      - acl-progs
      - postgresql
      - postgresql-libs-devel
      - python-psycopg2
    state: present

- name: Enable PostgreSQL
  file:
    src: /etc/sv/postgresql
    dest: /var/service/postgresql
    state: link

- name: Wait for the PostgreSQL server to start
  wait_for:
    port: 5432

- name: Create Constellation Database
  postgresql_db:
    name: constellation_db
  become_user: postgres

- name: Create Constellation Database User
  postgresql_user:
    db: constellation_db
    name: constellation_dbuser
    password: "{{ constellation_dbpassword }}"
    priv: ALL
  become_user: postgres

- name: Create the constellation user
  user:
    name: constellation
    state: present
    system: yes
    createhome: no

- name: Create /opt/constellation
  file:
    path: /opt/constellation
    state: directory
    owner: constellation
    group: constellation
    mode: 0755

- name: Create /opt/constellation/scripts
  file:
    path: /opt/constellation/scripts
    state: directory
    owner: constellation
    group: constellation
    mode: 0755

- name: Install scripts
  copy:
    src: "{{ item }}"
    dest: /opt/constellation/scripts/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - do_migrate
    - do_collectstatic

- name: Install XBPS Dependencies
  xbps:
    pkg:
      - python3
      - python3-devel
      - python3-virtualenv
      - libldap-devel
      - gcc
      - uwsgi
      - uwsgi-python3
    state: present

- name: Install Python Dependencies
  pip:
    name:
      - django-auth-ldap
      - pyldap
      - psycopg2
      - Constellation-Base
    state: latest
    virtualenv: /opt/constellation/venv
    virtualenv_python: python3
  become: yes
  become_user: constellation

- name: Install Constellation Modules
  pip:
    name: "{{ item.url | default(item.name) }}"
    state: present
    virtualenv: /opt/constellation/venv
    virtualenv_python: python3
  with_items: "{{ ConstellationApps }}"
  become: yes
  become_user: constellation
  loop_control:
    label: "{{ item.name }}"

- name: Create Constellation Configuration Directory
  file:
    path: /opt/constellation/constellation
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Install Dynamic Constellation Site Settings
  template:
    src: "{{ item }}.py.j2"
    dest: /opt/constellation/constellation/{{ item }}.py
    owner: root
    group: root
    mode: 0644
  with_items:
    - settings
    - urls
  notify:
    - constellation_migrate
    - constellation_collectstatic
    - constellation

- name: Install Static Constellation Site Settings
  copy:
    src: "{{ item }}.py"
    dest: /opt/constellation/constellation/{{ item }}.py
    owner: root
    group: root
    mode: 0644
  with_items:
    - wsgi
    - __init__
  notify:
    - constellation_migrate
    - constellation_collectstatic
    - constellation

- name: Install uwsgi.ini
  copy:
    src: uwsgi.ini
    dest: /opt/constellation/uwsgi.ini
    owner: root
    group: root
    mode: 0644

- name: Install nginx config
  template:
    src: constellation.conf
    dest: /etc/nginx/sites-available/constellation.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - nginx

- name: Enable nginx config
  file:
    src: ../sites-available/constellation.conf
    dest: /etc/nginx/sites-enabled/constellation.conf
    state: link
  notify:
    - nginx

- name: Install RunIt Service (1/2)
  file:
    path: /etc/sv/constellation
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Install RunIt Service (2/2)
  copy:
    src: run
    dest: /etc/sv/constellation/run
    owner: root
    group: root
    mode: 0755

- name: Enable Constellation
  file:
    src: /etc/sv/constellation
    dest: /var/service/constellation
    state: link
